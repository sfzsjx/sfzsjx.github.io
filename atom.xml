<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>上善若水博客</title>
  
  <subtitle>大数据</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-06T04:21:07.388Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>上善若水</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hive 数据库</title>
    <link href="http://yoursite.com/2020/07/06/hive-%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://yoursite.com/2020/07/06/hive-数据库/</id>
    <published>2020-07-06T01:12:08.000Z</published>
    <updated>2020-07-06T04:21:07.388Z</updated>
    
    <content type="html"><![CDATA[<p>1.hive临时表<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：hive临时表只对当前的会话有效，可以在程序执行是选择创建，但其也有缺陷就是不支持分区字段和创建索引</span><br></pre></td></tr></table></figure></p><p>2.hive临时表一般用处不大，再出现中不容易使用<br>建议采用创建内部表，并在程序执行前后执行删除内部表的操作</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.hive临时表&lt;br&gt;&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=
      
    
    </summary>
    
      <category term="大数据" scheme="http://yoursite.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="hive" scheme="http://yoursite.com/tags/hive/"/>
    
  </entry>
  
  <entry>
    <title>spark 读取hive jdbc方式</title>
    <link href="http://yoursite.com/2020/07/03/spark-%E8%AF%BB%E5%8F%96hive-jdbc%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/07/03/spark-读取hive-jdbc方式/</id>
    <published>2020-07-03T10:46:08.000Z</published>
    <updated>2020-07-03T10:46:08.257Z</updated>
    
    <content type="html"><![CDATA[<p>1.先通过hive-jdbc读取出来的到resultset，然后再将resultset转成list，在将list 转成dataset<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>2.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.先通过hive-jdbc读取出来的到resultset，然后再将resultset转成list，在将list 转成dataset&lt;br&gt;&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
      <category term="大数据" scheme="http://yoursite.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="spark" scheme="http://yoursite.com/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>flink 提交命令</title>
    <link href="http://yoursite.com/2020/06/30/flink-%E6%8F%90%E4%BA%A4%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2020/06/30/flink-提交命令/</id>
    <published>2020-06-30T07:36:41.000Z</published>
    <updated>2020-06-30T07:36:41.961Z</updated>
    
    <content type="html"><![CDATA[<p>一、flink 提交运行程序一般有两种方式<br>1.通过flink监控界面来提交flink程序<br>2.通过命令行的方式提交命令</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">nohup flink run -p 1 -c com.gree.bdc.track.DeviceTrackInfo /home/bdcopt/spark/logistics/test/car-track-show-test.jar --paramProperties /home/bdcopt/spark/logistics/test/druid-test.properties  &gt; /home/bdcopt/spark/logistics/test/car-track-show-test.log 2&gt;&amp;1  &amp;</span><br><span class="line"></span><br><span class="line">解释 ：flink run 运行</span><br><span class="line"></span><br><span class="line">-p 配置job的并行度</span><br><span class="line">-c 指定主类</span><br><span class="line">/home/bdcopt/spark/logistics/test/car-track-show-test.jar 可运行jar</span><br><span class="line"></span><br><span class="line">--paramProperties 自定义指定额外配置文件</span><br><span class="line">如：</span><br><span class="line"> try &#123;</span><br><span class="line">            ParameterTool parameterTool = ParameterTool.fromArgs(args);</span><br><span class="line">            String druidProperties = parameterTool.get(&quot;paramProperties&quot;);</span><br><span class="line">            ///加载类路径</span><br><span class="line">            properties.load(new FileInputStream(druidProperties));</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、flink 提交运行程序一般有两种方式&lt;br&gt;1.通过flink监控界面来提交flink程序&lt;br&gt;2.通过命令行的方式提交命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="大数据" scheme="http://yoursite.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="flink" scheme="http://yoursite.com/tags/flink/"/>
    
  </entry>
  
  <entry>
    <title>spark 集群常见错误</title>
    <link href="http://yoursite.com/2020/06/26/spark-%E9%9B%86%E7%BE%A4%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/"/>
    <id>http://yoursite.com/2020/06/26/spark-集群常见错误/</id>
    <published>2020-06-26T01:02:41.000Z</published>
    <updated>2020-07-06T04:25:00.653Z</updated>
    
    <content type="html"><![CDATA[<p>1.本地依赖jar与集群jar包冲突<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">org.apache.oozie.action.ActionExecutorException: JA009: cache file (mapreduce.job.cache.files) scheme: &quot;hdfs&quot; host: &quot;nameservice1&quot; port: -1 file: &quot;/user/hue/oozie/workspaces/hue-oozie-1585558811.97/lib/spark-sql-kafka-0-10_2.11-2.4.0-cdh6.3.0.jar&quot; conflicts with cache file (mapreduce.job.cache.files) hdfs://nameservice1/user/oozie/share/lib/lib_20190819164924/spark/spark-sql-kafka-0-10_2.11-2.4.0-cdh6.3.0.jar</span><br><span class="line"></span><br><span class="line">解决办法：在本地工作区内去除所依赖的jar</span><br></pre></td></tr></table></figure></p><p>2.scala版本不一致导致出错<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread &quot;main&quot; java.lang.NoSuchMethodError: scala.Predef$.ArrowAssoc(Ljava/lang/Object;)Ljava/lang/Object;</span><br><span class="line"></span><br><span class="line">解决办法：重新设置scala版本号</span><br></pre></td></tr></table></figure></p><p>3.hue提交spark注意点<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">java.lang.reflect.InvocationTargetException</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">at org.apache.oozie.action.hadoop.LauncherAM.runActionMain(LauncherAM.java:410)</span><br><span class="line">at org.apache.oozie.action.hadoop.LauncherAM.access$300(LauncherAM.java:55)</span><br><span class="line">at org.apache.oozie.action.hadoop.LauncherAM$2.run(LauncherAM.java:223)</span><br><span class="line">at java.security.AccessController.doPrivileged(Native Method)</span><br><span class="line">at javax.security.auth.Subject.doAs(Subject.java:422)</span><br><span class="line">at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1875)</span><br><span class="line">at org.apache.oozie.action.hadoop.LauncherAM.run(LauncherAM.java:217)</span><br><span class="line">at org.apache.oozie.action.hadoop.LauncherAM$1.run(LauncherAM.java:153)</span><br><span class="line">at java.security.AccessController.doPrivileged(Native Method)</span><br><span class="line">at javax.security.auth.Subject.doAs(Subject.java:422)</span><br><span class="line">at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1875)</span><br><span class="line">at org.apache.oozie.action.hadoop.LauncherAM.main(LauncherAM.java:141)</span><br><span class="line">Caused by: org.apache.spark.SparkException: Application application_1588215511098_574080 finished with failed status</span><br><span class="line"></span><br><span class="line">可能是spark提交时未去掉master设置，在代码里注释就可以了。</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.本地依赖jar与集群jar包冲突&lt;br&gt;&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="大数据" scheme="http://yoursite.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="spark" scheme="http://yoursite.com/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>flink 运行时长记录</title>
    <link href="http://yoursite.com/2020/06/18/flink-%E8%BF%90%E8%A1%8C%E6%97%B6%E9%95%BF%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2020/06/18/flink-运行时长记录/</id>
    <published>2020-06-18T06:14:01.000Z</published>
    <updated>2020-06-18T06:14:01.959Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2020/06/18/da8d2f50-b12a-11ea-a950-4d00710d9c4a.png" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/2020/06/18/da8d2f50-b12a-11ea-a950-4d00710d9c4a.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>spark 读取外部配置文件</title>
    <link href="http://yoursite.com/2020/06/13/spark-%E8%AF%BB%E5%8F%96%E5%A4%96%E9%83%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2020/06/13/spark-读取外部配置文件/</id>
    <published>2020-06-13T01:16:43.000Z</published>
    <updated>2020-06-13T01:20:42.165Z</updated>
    
    <content type="html"><![CDATA[<p>1.spark如何读取外部配置文件，能够更好的动态迁移程序以及当数据库等迁移是，只需要重新修改配置文件即可，而不需要指定重新编译程序，提交配置。<br>以下方法本人亲测有效<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">package load;</span><br><span class="line"></span><br><span class="line">import org.apache.spark.SparkFiles;</span><br><span class="line">import org.apache.spark.sql.SparkSession;</span><br><span class="line"></span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.Properties;</span><br><span class="line"></span><br><span class="line">public class ReadConfig &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        SparkSession spark = SparkSession.builder()</span><br><span class="line">                .appName(&quot;test&quot;)</span><br><span class="line">                .config(&quot;spark.debug.maxToStringFields&quot;,&quot;100&quot;)</span><br><span class="line">                .config(&quot;spark.sql.shuffle.partitions&quot;, &quot;50&quot;)</span><br><span class="line">                .config(&quot;spark.default.parallelism&quot;, &quot;12&quot;)</span><br><span class="line">                .getOrCreate();</span><br><span class="line"></span><br><span class="line">        String s = SparkFiles.get(&quot;property.yml&quot;);</span><br><span class="line">        try &#123;</span><br><span class="line">            Properties props = new Properties();</span><br><span class="line">            props.load(new FileInputStream(s));</span><br><span class="line">            String nodes = props.getProperty(&quot;es.nodes&quot;);</span><br><span class="line">            String port = props.getProperty(&quot;es.port&quot;);</span><br><span class="line">            System.out.println(nodes);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        spark.stop();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/images/2020/06/13/80058250-ad13-11ea-9fb5-4b8d3e35b365.png" alt="image.png"><br>参考地址：<a href="https://blog.csdn.net/high2011/article/details/96288072?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.nonecase" target="_blank" rel="noopener">spark读取配置文件</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.spark如何读取外部配置文件，能够更好的动态迁移程序以及当数据库等迁移是，只需要重新修改配置文件即可，而不需要指定重新编译程序，提交配置。&lt;br&gt;以下方法本人亲测有效&lt;br&gt;&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr
      
    
    </summary>
    
      <category term="大数据" scheme="http://yoursite.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="spark" scheme="http://yoursite.com/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>git ssh 免密配置</title>
    <link href="http://yoursite.com/2020/06/12/git-ssh-%E5%85%8D%E5%AF%86%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2020/06/12/git-ssh-免密配置/</id>
    <published>2020-06-12T03:28:53.000Z</published>
    <updated>2020-06-12T03:32:16.722Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、配置全局用户名和邮箱"><a href="#一、配置全局用户名和邮箱" class="headerlink" title="一、配置全局用户名和邮箱"></a>一、配置全局用户名和邮箱</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;xxx&quot;</span><br><span class="line">git config --global user.email &quot;xxx@xxx.com.cn&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;xxx@xxx.com.cn&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/2020/06/12/fd79a2b0-ac5b-11ea-9fb5-4b8d3e35b365.png" alt="image.png"></p><h3 id="二-、复制id-rsa-pub内容到git上"><a href="#二-、复制id-rsa-pub内容到git上" class="headerlink" title="二 、复制id_rsa.pub内容到git上"></a>二 、复制id_rsa.pub内容到git上</h3><p><img src="/images/2020/06/12/b96abbd0-ac5c-11ea-9fb5-4b8d3e35b365.png" alt="image.png"><br><img src="/images/2020/06/12/aee7b190-ac5c-11ea-9fb5-4b8d3e35b365.png" alt="image.png"></p><h3 id="三-、克隆git代码"><a href="#三-、克隆git代码" class="headerlink" title="三 、克隆git代码"></a>三 、克隆git代码</h3><blockquote><p>git clone git@xxx</p></blockquote><h3 id="四-maven安装配置"><a href="#四-maven安装配置" class="headerlink" title="四 maven安装配置"></a>四 maven安装配置</h3><p>参考博客：<a href="https://blog.csdn.net/l05199179/article/details/78982212" target="_blank" rel="noopener">maven安装</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、配置全局用户名和邮箱&quot;&gt;&lt;a href=&quot;#一、配置全局用户名和邮箱&quot; class=&quot;headerlink&quot; title=&quot;一、配置全局用户名和邮箱&quot;&gt;&lt;/a&gt;一、配置全局用户名和邮箱&lt;/h3&gt;&lt;figure class=&quot;highlight plain hl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常用地址记录</title>
    <link href="http://yoursite.com/2020/06/11/%E5%B8%B8%E7%94%A8%E5%9C%B0%E5%9D%80%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2020/06/11/常用地址记录/</id>
    <published>2020-06-11T08:17:56.000Z</published>
    <updated>2020-06-11T08:17:56.595Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录地址"><a href="#目录地址" class="headerlink" title="目录地址"></a>目录地址</h1><blockquote><p>C:\Users\hadoop\Documents\Tencent Files\2590667609\FileRecv</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;目录地址&quot;&gt;&lt;a href=&quot;#目录地址&quot; class=&quot;headerlink&quot; title=&quot;目录地址&quot;&gt;&lt;/a&gt;目录地址&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;C:\Users\hadoop\Documents\Tencent Files\259066760
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>jrebel 安装部署</title>
    <link href="http://yoursite.com/2020/06/11/jrebel-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <id>http://yoursite.com/2020/06/11/jrebel-安装部署/</id>
    <published>2020-06-11T02:53:05.000Z</published>
    <updated>2020-06-11T02:56:19.261Z</updated>
    
    <content type="html"><![CDATA[<p>1.下载安装jrebel插件，并restart idea<br><img src="/images/2020/06/11/f2ec91f0-ab8d-11ea-9fb5-4b8d3e35b365.png" alt="image.png"></p><p>2.注册认证，打开注册机<br><img src="/images/2020/06/11/2d9fe220-ab8e-11ea-9fb5-4b8d3e35b365.png" alt="image.png"></p><p>3.激活jrebel<br><img src="/images/2020/06/11/644dfdc0-ab8e-11ea-9fb5-4b8d3e35b365.png" alt="image.png"><br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8888/ae6a7dd7-fc4a-4044-8266-7d8220ae6567</span><br><span class="line">topsale@vip.qq.com</span><br></pre></td></tr></table></figure></p><p>4.<br><img src="/images/2020/06/11/9ec1d3f0-ab8e-11ea-9fb5-4b8d3e35b365.png" alt="image.png"></p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">链接：https://pan.baidu.com/s/1ctag4-yj9YYo5Xe3DxPVMA</span><br><span class="line">提取码：18rj</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.下载安装jrebel插件，并restart idea&lt;br&gt;&lt;img src=&quot;/images/2020/06/11/f2ec91f0-ab8d-11ea-9fb5-4b8d3e35b365.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.注册认证，打开注
      
    
    </summary>
    
      <category term="IDEA" scheme="http://yoursite.com/categories/IDEA/"/>
    
    
      <category term="插件" scheme="http://yoursite.com/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>idea 快捷键</title>
    <link href="http://yoursite.com/2020/06/11/idea-%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/2020/06/11/idea-快捷键/</id>
    <published>2020-06-11T00:48:00.000Z</published>
    <updated>2020-06-11T00:48:00.784Z</updated>
    
    <content type="html"><![CDATA[<p>1.try-catch快捷键<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ctrl+alt+t</span><br></pre></td></tr></table></figure></p><p><img src="/images/2020/06/11/2030c430-ab7d-11ea-9fb5-4b8d3e35b365.png" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.try-catch快捷键&lt;br&gt;&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;lin
      
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>spring boot test</title>
    <link href="http://yoursite.com/2020/06/10/spring-boot-test/"/>
    <id>http://yoursite.com/2020/06/10/spring-boot-test/</id>
    <published>2020-06-10T07:21:58.000Z</published>
    <updated>2020-06-10T07:21:58.936Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package com.gree.bdc;</span><br><span class="line"></span><br><span class="line">import com.gree.bdc.entity.TGpsWarehouse;</span><br><span class="line">import com.gree.bdc.mapper.TGpsWarehouseMapper;</span><br><span class="line">import org.junit.Test;</span><br><span class="line">import org.junit.runner.RunWith;</span><br><span class="line">import org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line">import org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line">import javax.annotation.Resource;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@RunWith(SpringRunner.class)</span><br><span class="line">@SpringBootTest(classes = DataAccessApplication.class,webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)</span><br><span class="line">public class MysqlTest &#123;</span><br><span class="line"></span><br><span class="line">    @Resource</span><br><span class="line">    private TGpsWarehouseMapper tGpsWarehouseMapper;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void addBatchWareHouse()&#123;</span><br><span class="line">        List&lt;TGpsWarehouse&gt; warehouseList = new ArrayList&lt;&gt;();</span><br><span class="line">        TGpsWarehouse warehouse = new TGpsWarehouse(null,&quot;Aa&quot;,&quot;006&quot;,&quot;格力电器&quot;,</span><br><span class="line">                &quot;003&quot;,&quot;经济&quot;,2000,&quot;销售订单&quot;,null);</span><br><span class="line">        warehouseList.add(warehouse);</span><br><span class="line">        tGpsWarehouseMapper.addBatchWareHouse(warehouseList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">           &lt;version&gt;2.1.7.RELEASE&lt;/version&gt;</span><br><span class="line">           &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">       &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">       &lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">           &lt;version&gt;4.12&lt;/version&gt;</span><br><span class="line">           &lt;!--&lt;scope&gt;test&lt;/scope&gt;--&gt;</span><br><span class="line">       &lt;/dependency&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
      <category term="后台" scheme="http://yoursite.com/categories/%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>mysql mybatis</title>
    <link href="http://yoursite.com/2020/06/06/mysql-mybatis/"/>
    <id>http://yoursite.com/2020/06/06/mysql-mybatis/</id>
    <published>2020-06-06T09:12:06.000Z</published>
    <updated>2020-06-11T09:11:57.618Z</updated>
    
    <content type="html"><![CDATA[<p>1.mybatis 动态查询<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;select id=&quot;isExistWarehouse&quot; resultType=&quot;integer&quot; resultMap=&quot;BaseResultMap&quot;&gt;</span><br><span class="line">   select count(*) from t_gps_warehouse</span><br><span class="line">   &lt;where&gt;</span><br><span class="line">     &lt;if test=&quot;warehouseAddress != null &quot;&gt;</span><br><span class="line">       warehouse_address = #&#123;warehouseAddress&#125;</span><br><span class="line">     &lt;/if&gt;</span><br><span class="line"></span><br><span class="line">     &lt;if test=&quot;warehouseCode != null &quot;&gt;</span><br><span class="line">       AND warehouse_code = #&#123;warehouseCode&#125;</span><br><span class="line">     &lt;/if&gt;</span><br><span class="line">     &lt;if test=&quot;areaCode != null &quot;&gt;</span><br><span class="line">       AND area_code = #&#123;areaCode&#125;</span><br><span class="line">     &lt;/if&gt;</span><br><span class="line">   &lt;/where&gt;</span><br><span class="line"> &lt;/select&gt;</span><br></pre></td></tr></table></figure></p><p>2.mybatis插入数据报错<br><img src="/images/2020/06/08/0d2815a0-a975-11ea-9fb5-4b8d3e35b365.png" alt="image.png"></p><p>原因：数据库中表的自增id没有设置成自增模式<br>解决办法：将自增id设置自动增加<br><img src="/images/2020/06/08/61474570-a975-11ea-9fb5-4b8d3e35b365.png" alt="image.png"></p><p>3.mysql重新设置主键生成策略为auto_increment时报错：resulting in duplicate entry ‘1’ for key ‘PRIMARY’</p><blockquote><p>原因：自增字段有值为0或其他小于0值<br>解决方法：改为其他值大于0<br>参考解决方案：<a href="https://blog.csdn.net/huanghanqian/article/details/80866802" target="_blank" rel="noopener">自增id设置出错</a></p></blockquote><p>4.mybatis插入操作<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;insert id=&quot;insertWaybillNo&quot; useGeneratedKeys=&quot;true&quot; keyProperty=&quot;id&quot; parameterType=&quot;com.gree.bdc.entity.TGpsWaybill&quot;&gt;</span><br><span class="line"></span><br><span class="line">   insert into t_gps_waybill (waybill_no,licence_plate, company_name, device_id,imei,</span><br><span class="line">                              leave_warehouse_id,latitude,longitude,geo_hash,factory_time,bind_status)</span><br><span class="line">    values (#&#123;waybillNo&#125;,#&#123;licencePlate&#125;,#&#123;companyName&#125;,#&#123;deviceId&#125;,#&#123;imei&#125;,#&#123;leaveWarehouseId&#125;,</span><br><span class="line">   #&#123;latitude&#125;,#&#123;longitude&#125;,#&#123;geoHash&#125;,#&#123;factoryTime&#125;,#&#123;bindStatus&#125;)</span><br><span class="line"></span><br><span class="line"> &lt;/insert&gt;</span><br></pre></td></tr></table></figure></p><ol start="5"><li>mybatis 查询数据一直为 null<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">package com.gree.bdc.entity;</span><br><span class="line"></span><br><span class="line">import lombok.AllArgsConstructor;</span><br><span class="line">import lombok.Data;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 司机信息</span><br><span class="line"> * @author hadoop</span><br><span class="line"> */</span><br><span class="line">@Data</span><br><span class="line">@AllArgsConstructor</span><br><span class="line">public class Driver &#123;</span><br><span class="line">    //司机名</span><br><span class="line">    private String driverName;</span><br><span class="line">    //司机电话</span><br><span class="line">    private String driverPhone;</span><br><span class="line">    //身份证号</span><br><span class="line">    private String idCard;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><img src="/images/2020/06/11/98146fb0-abc3-11ea-9fb5-4b8d3e35b365.png" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.mybatis 动态查询&lt;br&gt;&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;lin
      
    
    </summary>
    
      <category term="数据库 " scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>flink 算子记录</title>
    <link href="http://yoursite.com/2020/05/29/flink-%E7%AE%97%E5%AD%90%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2020/05/29/flink-算子记录/</id>
    <published>2020-05-29T05:37:12.000Z</published>
    <updated>2020-06-04T01:43:57.509Z</updated>
    
    <content type="html"><![CDATA[<p>1、join静态数据库<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 关联运单表,以及订单完成情况</span><br><span class="line"> * 输入 Tuple5&lt;&gt;(positionTime, imei, latitude, longitude, geoHashValue)</span><br><span class="line"> * 输出 WayBill</span><br><span class="line"> * @author hadoop</span><br><span class="line"> */</span><br><span class="line">public class JoinWaybill extends RichFlatMapFunction&lt;Tuple5&lt;Timestamp, String, Double, Double, String&gt;, WayBill&gt; &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void flatMap(Tuple5&lt;Timestamp, String, Double, Double, String&gt; value, Collector&lt;WayBill&gt; out) throws Exception &#123;</span><br><span class="line">        Connection conn;</span><br><span class="line">        Statement statement;</span><br><span class="line">        conn = DruidPoolUtils.getConnection();</span><br><span class="line">        statement = conn.createStatement();</span><br><span class="line">        ResultSet resultSet =  statement.executeQuery(&quot;SELECT waybill_no,device_id,longitude,latitude,&quot; +</span><br><span class="line">                    &quot; geo_hash,factory_time,bind_status,leave_time,distance_departure,waybill_status,finish_time FROM  t_gps_waybill where device_id = &quot; + value.f1);</span><br><span class="line"></span><br><span class="line">        while (resultSet.next())&#123;</span><br><span class="line">                WayBill wayBill = new WayBill();</span><br><span class="line">                wayBill.setWayBill(resultSet.getString(&quot;waybill_no&quot;));</span><br><span class="line">                out.collect(wayBill);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        DruidPoolUtils.close(conn,statement);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>2.sink mysql<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.flatMap(new JoinWaybill())</span><br><span class="line">      .addSink(new RichSinkFunction&lt;WayBill&gt;() &#123;</span><br><span class="line">          @Override</span><br><span class="line">          public void invoke(WayBill value, Context context) throws Exception &#123;</span><br><span class="line">              Connection conn;</span><br><span class="line">              PreparedStatement statement;</span><br><span class="line">              conn = DruidPoolUtils.getConnection();</span><br><span class="line"></span><br><span class="line">              statement = conn.prepareStatement(</span><br><span class="line">                      &quot; INSERT INTO t_gps_test (waybill_no)&quot; +</span><br><span class="line">                              &quot; values(?)&quot; );</span><br><span class="line"></span><br><span class="line">              statement.setString( 1,  value.getWayBill() );</span><br><span class="line">              statement.execute();</span><br><span class="line">              DruidPoolUtils.close(conn,statement);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;)</span><br></pre></td></tr></table></figure></p><p>3.window<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.window(SlidingEventTimeWindows.of(Time.minutes(1),Time.minutes(1)))</span><br><span class="line">                .process(new JoinWaybill()).print()</span><br></pre></td></tr></table></figure></p><p>4.flink全局变量</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//③配置参数</span><br><span class="line">        Configuration conf = new Configuration();</span><br><span class="line">        conf.setDouble(&quot;fixDistance&quot;,2000);</span><br><span class="line">        conf.setLong(&quot;fixTime&quot;,120L);</span><br><span class="line">        env.getConfig().setGlobalJobParameters(conf);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> ExecutionConfig.GlobalJobParameters globalParams = getRuntimeContext().getExecutionConfig().getGlobalJobParameters();</span><br><span class="line">        Configuration globConf = (Configuration) globalParams;</span><br><span class="line">        fixDistance = globConf.getDouble(&quot;fixDistance&quot;, 2000);</span><br><span class="line">        fixTime = globConf.getLong(&quot;fixTime&quot;, 120L);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、join静态数据库&lt;br&gt;&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;
      
    
    </summary>
    
      <category term="大数据" scheme="http://yoursite.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="flink" scheme="http://yoursite.com/tags/flink/"/>
    
  </entry>
  
  <entry>
    <title>mysql 常见问题</title>
    <link href="http://yoursite.com/2020/05/29/mysql-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2020/05/29/mysql-常见问题/</id>
    <published>2020-05-29T05:33:17.000Z</published>
    <updated>2020-06-02T07:55:07.144Z</updated>
    
    <content type="html"><![CDATA[<p>1.druidpool连接池空指针异常<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Connection conn;</span><br><span class="line">       Statement statement;</span><br><span class="line">       conn = DruidPoolUtils.getConnection();</span><br><span class="line">       statement = conn.createStatement();</span><br></pre></td></tr></table></figure></p><p>2.Exception in thread “main” java.sql.SQLException: Can not call getNString() when field’s charset isn’t UTF-8<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wayBill.setWayBill(resultSet.getNString(&quot;waybill_no&quot;));</span><br><span class="line">          System.out.println(resultSet.getString(&quot;waybill_no&quot;));</span><br></pre></td></tr></table></figure></p><p>3.当数据为null时，插入数据库是，程序异常</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">   statement.setInt( 1,  wayBillInfo.getBindStatus() );</span><br><span class="line">        statement.setTimestamp( 2, wayBillInfo.getLeaveTime());</span><br><span class="line">        statement.setDouble( 3, wayBillInfo.getDistanceDeparture());</span><br><span class="line">        statement.setLong( 4, wayBillInfo.getTimeDeparture());</span><br><span class="line">        statement.setInt( 5, wayBillInfo.getWayBillStatus());</span><br><span class="line">        statement.setTimestamp( 6,  wayBillInfo.getFinishTime() );</span><br><span class="line">        statement.setString( 7, wayBillInfo.getWayBillNo() );</span><br><span class="line"></span><br><span class="line">解决办法：setObject()</span><br></pre></td></tr></table></figure><p>4.sql防注入以及参数传递<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Connection conn = DruidPoolUtils.getConnection();</span><br><span class="line">        PreparedStatement statement = conn.prepareStatement(&quot;&quot;);</span><br><span class="line"></span><br><span class="line">        ResultSet resultSet = statement.executeQuery(&quot;SELECT order_no,purpose_latitude,purpose_longitude ,finish_time FROM t_gps_order_list WHERE waybill_no = &apos;&quot; +wayBill.getWayBillNo() +&quot;&apos;&quot; );</span><br></pre></td></tr></table></figure></p><p>5.mysql差集<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">SELECT a.oname, a.odesc </span><br><span class="line">FROM</span><br><span class="line">  object_a a </span><br><span class="line">  LEFT JOIN object_b b </span><br><span class="line">    ON a.oname = b.oname </span><br><span class="line">    AND a.odesc = b.odesc </span><br><span class="line">WHERE b.id IS NULL</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SELECT a.oname, a.odesc FROM object_a a </span><br><span class="line">MINUS </span><br><span class="line">SELECT b.oname, b.odesc FROM object_b b</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.druidpool连接池空指针异常&lt;br&gt;&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="数据库 " scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>flink 常见问题</title>
    <link href="http://yoursite.com/2020/05/27/flink-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2020/05/27/flink-常见问题/</id>
    <published>2020-05-27T08:15:57.000Z</published>
    <updated>2020-06-01T08:14:53.011Z</updated>
    
    <content type="html"><![CDATA[<p>1.Exception in thread “main” org.apache.flink.api.common.functions.InvalidTypesException: The generic type parameters of ‘Collector’ are missing. In many cases lambda methods don’t provide enough information for automatic type extraction when Java generics are involved. An easy workaround is to use an (anonymous) class instead that implements the ‘org.apache.flink.streaming.api.functions.windowing.AllWindowFunction’ interface. Otherwise the type has to be specified explicitly using type information</p><p><img src="/images/2020/05/27/05f0a360-9ff2-11ea-ba39-730617437852.png" alt="image.png"></p><p>解决办法：加上返回数据类型，如：<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.returns(TypeInformation.of(new TypeHint&lt;List&lt;Tuple8&lt;Timestamp, String, Double, Double, String, Integer, Long, String&gt;&gt;&gt;()&#123;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p>2.flink 一直重复计算第一条数据<br><img src="/images/2020/05/29/c3e8f080-a19a-11ea-ba39-730617437852.png" alt="image.png"></p><p>原因：<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">与flink的状态值有关</span><br></pre></td></tr></table></figure></p><p>解决办法<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">每次用到value是都调用 .value方法,如：</span><br><span class="line"></span><br><span class="line"> wayBillState.value().equals(0)</span><br></pre></td></tr></table></figure></p><p>可能原因2：<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">该算子自身报错，flinkcheckpoint 后重新计算导致程序一直在处理第一条数据</span><br></pre></td></tr></table></figure></p><p>3.flink的状态变量如何只更新元组中的某个字段，其他字段不更新<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">目前没有什么好办法：现提供两个不是办法的办法</span><br><span class="line">1.将两个字段分别用两个不同的状态变量保存，这样就可以分别更新了，但是造成状态变量过多，内存浪费</span><br><span class="line">2.还是用一个变量，在更新其中的某个字段时，取出不更新的字段与更新的字段和并，更新这个状态值</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.Exception in thread “main” org.apache.flink.api.common.functions.InvalidTypesException: The generic type parameters of ‘Collector’ are 
      
    
    </summary>
    
      <category term="大数据" scheme="http://yoursite.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="flink" scheme="http://yoursite.com/tags/flink/"/>
    
  </entry>
  
  <entry>
    <title>常用工具类</title>
    <link href="http://yoursite.com/2020/05/11/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>http://yoursite.com/2020/05/11/常用工具类/</id>
    <published>2020-05-11T07:27:49.000Z</published>
    <updated>2020-05-11T07:27:50.021Z</updated>
    
    <content type="html"><![CDATA[<h3 id="时间工具类"><a href="#时间工具类" class="headerlink" title="时间工具类"></a>时间工具类</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">import java.sql.Timestamp;</span><br><span class="line">import java.text.DateFormat;</span><br><span class="line">import java.text.ParseException;</span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Calendar;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.Locale;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 时间工具类</span><br><span class="line"> * @author hadoop</span><br><span class="line"> * @date 2020-03-24</span><br><span class="line"> */</span><br><span class="line">public class DateUtils &#123;</span><br><span class="line"></span><br><span class="line">    private static  SimpleDateFormat standardTimeFormat = new SimpleDateFormat(&quot;yyyy-MM-dd hh:mm:ss&quot;);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 比较两个时间大小 格式yyyy-MM-dd hh:mm:ss</span><br><span class="line">     * @return 布尔值</span><br><span class="line">     */</span><br><span class="line">    public static Boolean compare2Time(Timestamp startTime, Timestamp endTime) throws ParseException &#123;</span><br><span class="line"></span><br><span class="line">        if (startTime == null || endTime == null)&#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            return startTime.before(endTime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 日期格式转换</span><br><span class="line">     * @param oldDateStr 原先时间格式</span><br><span class="line">     * @return 新时间格式</span><br><span class="line">     * @throws ParseException 转换</span><br><span class="line">     */</span><br><span class="line">    public static String dealDateFormat(String oldDateStr) throws ParseException&#123;</span><br><span class="line">        //此格式只有  jdk 1.7才支持  yyyy-MM-dd‘T‘HH:mm:ss.SSSXXX</span><br><span class="line">        DateFormat df = new SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX&quot;);</span><br><span class="line">        if (oldDateStr != null)&#123;</span><br><span class="line">            Date  date = df.parse(oldDateStr);</span><br><span class="line">            SimpleDateFormat df1 = new SimpleDateFormat (&quot;EEE MMM dd HH:mm:ss Z yyyy&quot;, Locale.UK);</span><br><span class="line">            Date date1 =  df1.parse(date.toString());</span><br><span class="line">            DateFormat df2 = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);</span><br><span class="line">            return df2.format(date1);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 得到两个时间差  格式yyyy-MM-dd HH:mm:ss</span><br><span class="line">     * @param start 2019-06-27 14:12:40</span><br><span class="line">     * @param end   2019-08-27 14:12:40</span><br><span class="line">     * @return 5270400000</span><br><span class="line">     */</span><br><span class="line">    public static Long dateSubtraction(String start, String end) &#123;</span><br><span class="line">        SimpleDateFormat df = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);</span><br><span class="line">        try &#123;</span><br><span class="line">            Date date1 = df.parse(start);</span><br><span class="line">            Date date2 = df.parse(end);</span><br><span class="line">            Long diff = date2.getTime() - date1.getTime();</span><br><span class="line">            Long days = diff / (1000 * 60 * 60 * 24);</span><br><span class="line">            Long hours = (diff-days*(1000 * 60 * 60 * 24))/(1000* 60 * 60);</span><br><span class="line">            Long minutes = (diff-days*(1000 * 60 * 60 * 24)-hours*(1000* 60 * 60))/(1000* 60);</span><br><span class="line">            Long totalMin = days * 12 + hours*60 + minutes;</span><br><span class="line">            return totalMin;</span><br><span class="line">        &#125; catch (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return 0L;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取当前日期前一天</span><br><span class="line">     * @return 2019-08-26</span><br><span class="line">     */</span><br><span class="line">    public static String getBeforeDay() &#123;</span><br><span class="line"></span><br><span class="line">        SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);</span><br><span class="line">        Date date = new Date();</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line">        calendar.setTime(date);</span><br><span class="line">        calendar.add(Calendar.DAY_OF_MONTH, -1);</span><br><span class="line">        date = calendar.getTime();</span><br><span class="line">        return sdf.format(date);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取当前日期前一天新格式（yyyyMMdd）</span><br><span class="line">     * @return 2019-08-26</span><br><span class="line">     */</span><br><span class="line">    public static String getBeforeDayNewFormat() &#123;</span><br><span class="line">        SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyyMMdd&quot;);</span><br><span class="line">        Date date = new Date();</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line">        calendar.setTime(date);</span><br><span class="line">        calendar.add(Calendar.DAY_OF_MONTH, -1);</span><br><span class="line">        date = calendar.getTime();</span><br><span class="line">        return sdf.format(date);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 添加几分钟时间</span><br><span class="line">     * @param timestamp 时间戳</span><br><span class="line">     * @param time 毫秒数</span><br><span class="line">     * @return 时间戳</span><br><span class="line">     */</span><br><span class="line">    public static Timestamp addTime(Timestamp timestamp ,Long time)&#123;</span><br><span class="line"></span><br><span class="line">        return  new Timestamp(timestamp.getTime() + time);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;时间工具类&quot;&gt;&lt;a href=&quot;#时间工具类&quot; class=&quot;headerlink&quot; title=&quot;时间工具类&quot;&gt;&lt;/a&gt;时间工具类&lt;/h3&gt;&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
      <category term="大数据" scheme="http://yoursite.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="工具类" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>大数据处理地理数据</title>
    <link href="http://yoursite.com/2020/05/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%9C%B0%E7%90%86%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/2020/05/07/大数据处理地理数据/</id>
    <published>2020-05-07T11:55:22.000Z</published>
    <updated>2020-05-11T02:51:49.792Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-调用http请求工具类"><a href="#1-调用http请求工具类" class="headerlink" title="1.调用http请求工具类"></a>1.调用http请求工具类</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- http start --&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;com.squareup.okhttp3&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;okhttp&lt;/artifactId&gt;</span><br><span class="line">           &lt;version&gt;4.6.0&lt;/version&gt;</span><br><span class="line">       &lt;/dependency&gt;</span><br><span class="line">       &lt;!-- http end --&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">import okhttp3.*;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">public class OkHttpUtil &#123;</span><br><span class="line">    private static final Logger log = LoggerFactory.getLogger(OkHttpUtil.class);</span><br><span class="line">    public final static int CONNECT_TIMEOUT = 10;</span><br><span class="line">    public final static int READ_TIMEOUT = 30;</span><br><span class="line">    public final static int WRITE_TIMEOUT = 60;</span><br><span class="line">    private OkHttpClient mOkHttpClient;</span><br><span class="line"></span><br><span class="line">    private OkHttpUtil() &#123;</span><br><span class="line">        OkHttpClient.Builder clientBuilder = new OkHttpClient.Builder();</span><br><span class="line">        clientBuilder.readTimeout(READ_TIMEOUT, TimeUnit.SECONDS);//读取超时</span><br><span class="line">        clientBuilder.connectTimeout(CONNECT_TIMEOUT, TimeUnit.SECONDS);//连接超时</span><br><span class="line">        clientBuilder.writeTimeout(WRITE_TIMEOUT, TimeUnit.SECONDS);//写入超时</span><br><span class="line">        mOkHttpClient = clientBuilder.build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static OkHttpUtil getInstance() &#123;</span><br><span class="line">        return Holder.OK_HTTP_UTIL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String get(String url) throws Exception &#123;</span><br><span class="line">        return get(url, null);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String get(String url, HashMap&lt;String, String&gt; headers, HashMap&lt;String, String&gt; params) &#123;</span><br><span class="line">        String result = &quot;&quot;;</span><br><span class="line">        url = handleRequestParams(url, params);</span><br><span class="line"></span><br><span class="line">        Request request = new Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .headers(Headers.of(headers))</span><br><span class="line">                .get()</span><br><span class="line">                .build();</span><br><span class="line">        Call call = mOkHttpClient.newCall(request);</span><br><span class="line">        try &#123;</span><br><span class="line">            Response execute = call.execute();</span><br><span class="line">            result = execute.body().string();</span><br><span class="line"></span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            log.error(&quot;http 访问错误：&quot; + e);</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String get(String url, HashMap&lt;String, String&gt; params) throws Exception &#123;</span><br><span class="line">        String result = &quot;&quot;;</span><br><span class="line">        url = handleRequestParams(url, params);</span><br><span class="line"></span><br><span class="line">        Request request = new Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .get()</span><br><span class="line">                .build();</span><br><span class="line">        Call call = mOkHttpClient.newCall(request);</span><br><span class="line">        try &#123;</span><br><span class="line">            Response execute = call.execute();</span><br><span class="line">            int code = execute.code();</span><br><span class="line"></span><br><span class="line">            result = execute.body().string();</span><br><span class="line"></span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            log.error(&quot;http 访问错误：&quot; + e.getMessage());</span><br><span class="line">            throw new IOException(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private String handleRequestParams(String url, HashMap&lt;String, String&gt; params) &#123;</span><br><span class="line">        if (params != null &amp;&amp; params.values().size() &gt; 0) &#123;</span><br><span class="line">            StringBuilder stringBuilder = new StringBuilder();</span><br><span class="line">            stringBuilder.append(&quot;?&quot;);</span><br><span class="line">            for (Map.Entry&lt;String, String&gt; entry : params.entrySet()) &#123;</span><br><span class="line">                stringBuilder.append(entry.getKey() + &quot;=&quot; + entry.getValue() + &quot;&amp;&quot;);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            String substring = stringBuilder.substring(0, stringBuilder.length() - 1);</span><br><span class="line">            url += substring;</span><br><span class="line">        &#125;</span><br><span class="line">        return url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String post(String url, HashMap&lt;String, String&gt; headerParams, String body) &#123;</span><br><span class="line">        String result = &quot;&quot;;</span><br><span class="line">        Request request = new Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .headers(Headers.of(headerParams))</span><br><span class="line">                .post(RequestBody.create(MediaType.parse(&quot;application/json&quot;), body))</span><br><span class="line">                .build();</span><br><span class="line">        Call call = mOkHttpClient.newCall(request);</span><br><span class="line">        try &#123;</span><br><span class="line">            Response execute = call.execute();</span><br><span class="line">            int code = execute.code();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            log.info(&quot;post请求异常&quot; + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String post(String url, String body) &#123;</span><br><span class="line">        String result = &quot;&quot;;</span><br><span class="line">        Request request = new Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .post(RequestBody.create(MediaType.parse(&quot;application/json&quot;), body))</span><br><span class="line">                .build();</span><br><span class="line">        Call call = mOkHttpClient.newCall(request);</span><br><span class="line">        try &#123;</span><br><span class="line">            Response execute = call.execute();</span><br><span class="line">            result = execute.body().string();</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String xmlPost(String url, String body) &#123;</span><br><span class="line">        String result = &quot;&quot;;</span><br><span class="line">        Request request = new Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .post(RequestBody.create(MediaType.parse(&quot;application/xml&quot;), body))</span><br><span class="line">                .build();</span><br><span class="line">        Call call = mOkHttpClient.newCall(request);</span><br><span class="line">        try &#123;</span><br><span class="line">            Response execute = call.execute();</span><br><span class="line">            result = execute.body().string();</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private static class Holder &#123;</span><br><span class="line">        private static final OkHttpUtil OK_HTTP_UTIL = new OkHttpUtil();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-腾讯地图调用工具类"><a href="#2-腾讯地图调用工具类" class="headerlink" title="2.腾讯地图调用工具类"></a>2.腾讯地图调用工具类</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">package com.gree.bdc.util;</span><br><span class="line"></span><br><span class="line">import com.alibaba.fastjson.JSON;</span><br><span class="line">import com.gree.bdc.entity.AddressToCoordinateResult;</span><br><span class="line">import com.gree.bdc.entity.CoordinateToAddressResult;</span><br><span class="line">import com.gree.bdc.entity.Point;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line">import java.util.HashMap;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author hadoop</span><br><span class="line"> */</span><br><span class="line">public class MapUtil &#123;</span><br><span class="line">    private static final Logger log = LoggerFactory.getLogger(MapUtil.class);</span><br><span class="line"></span><br><span class="line">    //key需要自己申请</span><br><span class="line">    public static final String KEY = &quot;xxxx&quot;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 通过地址转坐标</span><br><span class="line">     * @param address 地址</span><br><span class="line">     * @throws Exception exception</span><br><span class="line">     */</span><br><span class="line">  public static Point addressToCoordinate(String address) throws Exception &#123;</span><br><span class="line">      String url = &quot;https://apis.map.qq.com/ws/geocoder/v1/&quot;;</span><br><span class="line">      HashMap&lt;String, String&gt; params = new HashMap&lt;&gt;(8);</span><br><span class="line">      params.put(&quot;address&quot;,address);</span><br><span class="line">      params.put(&quot;key&quot;,KEY);</span><br><span class="line"></span><br><span class="line">      String result = OkHttpUtil.getInstance().get(url, params);</span><br><span class="line">      AddressToCoordinateResult addressToCoordinateResult = JSON.parseObject(result, AddressToCoordinateResult.class);</span><br><span class="line">      Integer status = addressToCoordinateResult.getStatus();</span><br><span class="line">      if (status == 0 )&#123;</span><br><span class="line">          AddressToCoordinateResult.Result.Location location = addressToCoordinateResult.getResult().getLocation();</span><br><span class="line">          Double lng = location.getLng();</span><br><span class="line">          Double lat = location.getLat();</span><br><span class="line">          Point point = new Point();</span><br><span class="line">          point.setLat(lat);</span><br><span class="line">          point.setLng(lng);</span><br><span class="line">          return point;</span><br><span class="line">      &#125;</span><br><span class="line">      return null;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*两个坐标的距离</span><br><span class="line">*</span><br><span class="line">**/</span><br><span class="line">  public static Double distanceCalculate(double lat1, double lon1, double lat2, double lon2)&#123;</span><br><span class="line"></span><br><span class="line">          Double latitude1, longitude1, latitude2, longitude2;</span><br><span class="line">          Double dlat, dlon;</span><br><span class="line">          latitude1 = lat1;</span><br><span class="line">          longitude1 = lon1;</span><br><span class="line">          latitude2 = lat2;</span><br><span class="line">          longitude2 = lon2;</span><br><span class="line">          //computing procedure</span><br><span class="line">          Double a, c, distance;</span><br><span class="line"></span><br><span class="line">          dlon = Math.abs((longitude2 - longitude1)) * Math.PI / 180;</span><br><span class="line">          dlat = Math.abs((latitude2 - latitude1)) * Math.PI / 180;</span><br><span class="line">          a = (Math.sin(dlat / 2) * Math.sin(dlat / 2)) + Math.cos(latitude1 * Math.PI / 180) * Math.cos(latitude2 * Math.PI / 180) * (Math.sin(dlon / 2) * Math.sin(dlon / 2));</span><br><span class="line">          if (a == 1.0)&#123;</span><br><span class="line">              c = Math.PI;</span><br><span class="line">          &#125; else&#123;</span><br><span class="line">              c = 2 * Math.atan(Math.sqrt(a) / Math.sqrt(1 - a));</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">          distance = 6378137.0 * c;</span><br><span class="line">          return distance;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 通过地址转坐标</span><br><span class="line">     * @param location 地址</span><br><span class="line">     * @throws Exception exception</span><br><span class="line">     */</span><br><span class="line">    public static String coordinateToAddress(String location) throws Exception &#123;</span><br><span class="line">        String url = &quot;https://apis.map.qq.com/ws/geocoder/v1/&quot;;</span><br><span class="line">        HashMap&lt;String, String&gt; params = new HashMap&lt;&gt;(8);</span><br><span class="line">        params.put(&quot;location&quot;,location);</span><br><span class="line">        params.put(&quot;key&quot;,KEY);</span><br><span class="line"></span><br><span class="line">        String result = OkHttpUtil.getInstance().get(url, params);</span><br><span class="line">        CoordinateToAddressResult coordinateToAddressResult = JSON.parseObject(result, CoordinateToAddressResult.class);</span><br><span class="line">        ///System.out.println(coordinateToAddressResult);</span><br><span class="line">        Integer status = coordinateToAddressResult.getStatus();</span><br><span class="line">        if (status == 0 )&#123;</span><br><span class="line">            String address = coordinateToAddressResult.getResult().getAddress();</span><br><span class="line"></span><br><span class="line">            return address;</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>一般而言，腾讯地图的接口调用都有限制，对于普通的开发者上线为10000，并发5次/s，不建议正规项目使用，一旦并发过高会导致很多的地址解析失败，单个解析没问题，很难发现这个问题，故最好还是申请企业认证，申请企业认证每天可以300万的次数和1000的并发。<a href="https://lbs.qq.com/service/webService/webServiceGuide/webServiceMatrix" target="_blank" rel="noopener">腾讯地图位置服务网站</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-调用http请求工具类&quot;&gt;&lt;a href=&quot;#1-调用http请求工具类&quot; class=&quot;headerlink&quot; title=&quot;1.调用http请求工具类&quot;&gt;&lt;/a&gt;1.调用http请求工具类&lt;/h2&gt;&lt;figure class=&quot;highlight plai
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mysql常见异常处理</title>
    <link href="http://yoursite.com/2020/04/14/mysql%E5%B8%B8%E8%A7%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    <id>http://yoursite.com/2020/04/14/mysql常见异常处理/</id>
    <published>2020-04-14T09:04:24.000Z</published>
    <updated>2020-05-13T01:28:11.745Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql异常处理"><a href="#mysql异常处理" class="headerlink" title="mysql异常处理"></a>mysql异常处理</h1><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">解决java.sql.SQLException: Value &apos;0000-00-00&apos; can not be represented as java.sql.Date</span><br><span class="line"></span><br><span class="line">jdbc:mysql://yourserver:3306/yourdatabase?zeroDateTimeBehavior=convertToNull</span><br></pre></td></tr></table></figure><p>#mysql文本类型数据存储<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql中text 最大长来度为65,535(2的16次方–1)字符的TEXT列。</span><br><span class="line">如果你觉得text长度自不够百，可以选择</span><br><span class="line">MEDIUMTEXT最大长度为16,777,215。</span><br><span class="line">LONGTEXT最大长度为4,294,967,295</span><br><span class="line">Text主要度是用来存放非二进制的文本</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;mysql异常处理&quot;&gt;&lt;a href=&quot;#mysql异常处理&quot; class=&quot;headerlink&quot; title=&quot;mysql异常处理&quot;&gt;&lt;/a&gt;mysql异常处理&lt;/h1&gt;&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
      <category term="数据库 " scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>接口调试问题</title>
    <link href="http://yoursite.com/2020/04/11/%E6%8E%A5%E5%8F%A3%E8%B0%83%E8%AF%95%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2020/04/11/接口调试问题/</id>
    <published>2020-04-11T02:11:31.000Z</published>
    <updated>2020-05-09T07:06:15.343Z</updated>
    
    <content type="html"><![CDATA[<p>一、postman接口测试工具如何接收java.util.date参数</p><blockquote><p>时间格式采用：2020/04/11 14:12:14</p></blockquote><p>二、java 参数类型与mysql类型比较<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">===========java注入数据库==========</span><br><span class="line"></span><br><span class="line">java类型   mysql类型        成功与否</span><br><span class="line">date         date               yes</span><br><span class="line">date         time               no</span><br><span class="line">date         timestamp       no</span><br><span class="line">date         datetime         no</span><br><span class="line"></span><br><span class="line">time         date               no</span><br><span class="line">time         time               yes</span><br><span class="line">time         timestamp       no</span><br><span class="line">time         datetime         no</span><br><span class="line"></span><br><span class="line">timestamp date              yes</span><br><span class="line">timestamp time              yes</span><br><span class="line">timestamp timestamp     yes</span><br><span class="line">timestamp datetime        yes</span><br><span class="line">==========end java注入数据库========</span><br><span class="line">总规律，如果A完全包含B，则A可以向B注入数据，否则报错</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">==========从数据库提取到java ==========</span><br><span class="line"></span><br><span class="line">mysql类型    java类型     成与否</span><br><span class="line">date             date         yes</span><br><span class="line">date             time         yes --------------缺少的部分使用历元</span><br><span class="line">date           timestamp   yes --------------缺少的部分使用历元  </span><br><span class="line"></span><br><span class="line">time           date           yes --------------缺少的部分使用历元</span><br><span class="line">time           time           yes</span><br><span class="line">time          timestamp    yes --------------缺少的部分使用历元</span><br><span class="line"></span><br><span class="line">timestamp date           yes</span><br><span class="line">timestamp time           yes</span><br><span class="line">timestamp timestamp   yes</span><br><span class="line"></span><br><span class="line">datetime      date         yes</span><br><span class="line">datetime      time         yes</span><br><span class="line">datetime    timestamp   yes</span><br><span class="line">==========end 从数据库提取到java=======</span><br><span class="line">不会出错，缺少的部分使用历元，而不是当前日期时间</span><br></pre></td></tr></table></figure></p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">实战经验：在java中处理时间数据，建议采用java8中的时间工具类</span><br><span class="line">localtime</span><br><span class="line">localdate</span><br><span class="line">localdatetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在spark中处理时间的字段类型采用timestamp来计算，不要使用date类型计算</span><br><span class="line">mysql数据库中的日期类型字段采用date类型</span><br><span class="line">时间字段采用datetime 或者timestamp都可以，避免使用字符串，看起来更加正规。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、postman接口测试工具如何接收java.util.date参数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;时间格式采用：2020/04/11 14:12:14&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;二、java 参数类型与mysql类型比较&lt;br&gt;&lt;figure 
      
    
    </summary>
    
      <category term="后台" scheme="http://yoursite.com/categories/%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="postman" scheme="http://yoursite.com/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>flink数据处理</title>
    <link href="http://yoursite.com/2020/04/09/flink%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    <id>http://yoursite.com/2020/04/09/flink数据处理/</id>
    <published>2020-04-09T01:54:23.000Z</published>
    <updated>2020-04-09T02:09:11.969Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">package com.gree.bdc.device;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import com.google.gson.Gson;</span><br><span class="line">import com.gree.bdc.entity.DevicePosition;</span><br><span class="line">import com.gree.bdc.position.LongSpot;</span><br><span class="line">import com.gree.bdc.util.InitFlinkUtils;</span><br><span class="line">import org.apache.flink.api.common.serialization.SimpleStringSchema;</span><br><span class="line">import org.apache.flink.api.common.typeinfo.TypeHint;</span><br><span class="line">import org.apache.flink.api.common.typeinfo.TypeInformation;</span><br><span class="line">import org.apache.flink.api.java.functions.KeySelector;</span><br><span class="line">import org.apache.flink.api.java.tuple.Tuple4;</span><br><span class="line">import org.apache.flink.streaming.api.TimeCharacteristic;</span><br><span class="line">import org.apache.flink.streaming.api.datastream.DataStreamSource;</span><br><span class="line">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br><span class="line">import org.apache.flink.streaming.api.functions.timestamps.BoundedOutOfOrdernessTimestampExtractor;</span><br><span class="line">import org.apache.flink.streaming.api.windowing.assigners.SlidingEventTimeWindows;</span><br><span class="line">import org.apache.flink.streaming.api.windowing.time.Time;</span><br><span class="line">import org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumer;</span><br><span class="line"></span><br><span class="line">import java.sql.Timestamp;</span><br><span class="line">import java.util.Properties;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 设备久置点计算</span><br><span class="line"> * @author hadoop</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class DeviceLongSpotInfo &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        System.setProperty(&quot;java.security.auth.login.config&quot;,&quot;/home/bdcopt/spark/jaas.conf&quot;);</span><br><span class="line">        System.setProperty(&quot;java.security.krb5.conf&quot;,&quot;/home/bdcopt/spark/krb5.conf&quot;);</span><br><span class="line"></span><br><span class="line">        StreamExecutionEnvironment env = InitFlinkUtils.getEnv();</span><br><span class="line">        env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);</span><br><span class="line"></span><br><span class="line">        //读取kafka数据源</span><br><span class="line">        Properties properties = new Properties();</span><br><span class="line">        properties.setProperty(&quot;bootstrap.servers&quot;,&quot;kafka01:30001,kafka02:30002,kafka03:30003,kafka04:30004,kafka05:30005&quot;);</span><br><span class="line">        properties.setProperty(&quot;group.id&quot;,&quot;test&quot;);</span><br><span class="line">        properties.setProperty(&quot;auto.offset.reset&quot;,&quot;latest&quot;);</span><br><span class="line">        properties.setProperty(&quot;security.protocol&quot;,&quot;SASL_PLAINTEXT&quot;);</span><br><span class="line">        properties.setProperty(&quot;sasl.kerberos.service.name&quot;,&quot;kafka&quot;);</span><br><span class="line">        FlinkKafkaConsumer&lt;String&gt; kafkatopic0619 =</span><br><span class="line">                new FlinkKafkaConsumer&lt;String&gt;(&quot;test&quot;, new SimpleStringSchema(), properties);</span><br><span class="line">        kafkatopic0619.setStartFromLatest();</span><br><span class="line">        env.setParallelism(4);</span><br><span class="line">        DataStreamSource&lt;String&gt; sourceStream = env.addSource(kafkatopic0619);</span><br><span class="line"></span><br><span class="line">        //数据处理：</span><br><span class="line">        //1.按照设备id进行分组计算，按照每个久置点周期为一个窗口大小</span><br><span class="line">        // 2.移动距离为每个上报频率为滑动窗口的距离，计算在这个窗口的上报的设备点的距离与第一个设备的点的距离在</span><br><span class="line">        //可以接受的范围，那么这个点就是一个久置点。</span><br><span class="line"></span><br><span class="line">        sourceStream.map(value -&gt; &#123;</span><br><span class="line">            Gson gson = new Gson();</span><br><span class="line">            DevicePosition devicePosition = gson.fromJson(value, DevicePosition.class);</span><br><span class="line">            String imei = devicePosition.getImei();</span><br><span class="line">            Timestamp positionTime = devicePosition.getPosition_time();</span><br><span class="line">            String longitude = devicePosition.getLongitude();</span><br><span class="line">            String latitude = devicePosition.getLatitude();</span><br><span class="line">            return new Tuple4&lt;&gt;(positionTime,imei,latitude,longitude);</span><br><span class="line">        &#125;).returns(TypeInformation.of(new TypeHint&lt;Tuple4&lt;Timestamp, String, String, String&gt;&gt;() &#123;</span><br><span class="line">        &#125;)).assignTimestampsAndWatermarks(new BoundedOutOfOrdernessTimestampExtractor&lt;Tuple4&lt;Timestamp, String, String, String&gt;&gt;(Time.minutes(1)) &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public long extractTimestamp(Tuple4&lt;Timestamp, String, String, String&gt; element) &#123;</span><br><span class="line">                return element.f0.getTime();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).keyBy((KeySelector&lt;Tuple4&lt;Timestamp,String,String,String&gt;,String&gt;) map -&gt; map.f1)</span><br><span class="line">        .window(SlidingEventTimeWindows.of(Time.minutes(30L),Time.minutes(3L)))</span><br><span class="line">        .process(new LongSpot());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line">package com.gree.bdc;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import com.google.gson.Gson;</span><br><span class="line">import com.gree.bdc.entity.DeviceLongSpot;</span><br><span class="line">import com.gree.bdc.entity.DevicePosition;</span><br><span class="line">import com.gree.bdc.entity.DeviceResidenceTime;</span><br><span class="line">import com.gree.bdc.position.LongSpotNew;</span><br><span class="line">import com.gree.bdc.sink.MysqlSink;</span><br><span class="line">import com.gree.bdc.util.DateUtils;</span><br><span class="line">import com.gree.bdc.util.InitFlinkUtils;</span><br><span class="line">import com.gree.bdc.util.MapUtils;</span><br><span class="line">import org.apache.flink.api.common.functions.MapFunction;</span><br><span class="line">import org.apache.flink.api.common.functions.RichFlatMapFunction;</span><br><span class="line">import org.apache.flink.api.common.functions.RichMapFunction;</span><br><span class="line">import org.apache.flink.api.common.serialization.SimpleStringSchema;</span><br><span class="line">import org.apache.flink.api.common.state.StateTtlConfig;</span><br><span class="line">import org.apache.flink.api.common.state.ValueState;</span><br><span class="line">import org.apache.flink.api.common.state.ValueStateDescriptor;</span><br><span class="line">import org.apache.flink.api.common.time.Time;</span><br><span class="line">import org.apache.flink.api.common.typeinfo.TypeHint;</span><br><span class="line">import org.apache.flink.api.common.typeinfo.TypeInformation;</span><br><span class="line">import org.apache.flink.api.java.functions.KeySelector;</span><br><span class="line">import org.apache.flink.api.java.tuple.Tuple2;</span><br><span class="line">import org.apache.flink.api.java.tuple.Tuple4;</span><br><span class="line">import org.apache.flink.api.java.tuple.Tuple5;</span><br><span class="line">import org.apache.flink.api.java.tuple.Tuple6;</span><br><span class="line">import org.apache.flink.configuration.Configuration;</span><br><span class="line">import org.apache.flink.streaming.api.TimeCharacteristic;</span><br><span class="line">import org.apache.flink.streaming.api.datastream.DataStreamSource;</span><br><span class="line">import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;</span><br><span class="line">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br><span class="line">import org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumer;</span><br><span class="line">import org.apache.flink.util.Collector;</span><br><span class="line"></span><br><span class="line">import java.sql.Timestamp;</span><br><span class="line">import java.util.Properties;</span><br><span class="line"></span><br><span class="line">public class ReadKafkaTest &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        StreamExecutionEnvironment env = InitFlinkUtils.getEnv();</span><br><span class="line">        env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);</span><br><span class="line">        Properties properties = new Properties();</span><br><span class="line">        //properties.setProperty(&quot;bootstrap.servers&quot;,&quot;kafka01:30001,kafka02:30002,kafka03:30003,kafka04:30004,kafka05:30005&quot;);</span><br><span class="line">        properties.setProperty(&quot;bootstrap.servers&quot;, &quot;localhost:9092&quot;);</span><br><span class="line">        properties.setProperty(&quot;group.id&quot;,&quot;test&quot;);</span><br><span class="line">        FlinkKafkaConsumer&lt;String&gt; kafkatopic0619 =</span><br><span class="line">                new FlinkKafkaConsumer&lt;String&gt;(&quot;test08&quot;, new SimpleStringSchema(), properties);</span><br><span class="line">        kafkatopic0619.setStartFromLatest();</span><br><span class="line">        DataStreamSource&lt;String&gt; sourceStream = env.addSource(kafkatopic0619);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        SingleOutputStreamOperator&lt;Tuple6&lt;String,Timestamp,String,Double,Double,Long&gt;&gt; map = sourceStream.map(value -&gt; &#123;</span><br><span class="line">            Gson gson = new Gson();</span><br><span class="line">            DevicePosition devicePosition = gson.fromJson(value, DevicePosition.class);</span><br><span class="line">            String imei = devicePosition.getImei();</span><br><span class="line">            Timestamp positionTime = devicePosition.getPosition_time();</span><br><span class="line">            String longitude = devicePosition.getLongitude();</span><br><span class="line">            String latitude = devicePosition.getLatitude();</span><br><span class="line">            return new Tuple4&lt;&gt;(positionTime, imei, latitude, longitude);</span><br><span class="line">        &#125;).returns(TypeInformation.of(new TypeHint&lt;Tuple4&lt;Timestamp, String, String, String&gt;&gt;() &#123;</span><br><span class="line">        &#125;)).keyBy(1)</span><br><span class="line">                .map(new RichMapFunction&lt;Tuple4&lt;Timestamp, String, String, String&gt;, Tuple6&lt;String,Timestamp,String,Double,Double,Long&gt;&gt;() &#123;</span><br><span class="line"></span><br><span class="line">                    private ValueState&lt;Tuple4&lt;Timestamp, String, String, String&gt;&gt; valueState;</span><br><span class="line"></span><br><span class="line">                    @Override</span><br><span class="line">                    public Tuple6&lt;String,Timestamp,String,Double,Double,Long&gt; map(Tuple4&lt;Timestamp, String, String, String&gt; value)</span><br><span class="line">                            throws Exception &#123;</span><br><span class="line">                        Tuple4&lt;Timestamp, String, String, String&gt; currentValue = valueState.value();</span><br><span class="line"></span><br><span class="line">                        System.out.println(&quot;刚开始的状态 ： &quot; + currentValue);</span><br><span class="line"></span><br><span class="line">                        if (currentValue == null) &#123;</span><br><span class="line">                            currentValue = Tuple4.of(value.f0, value.f1, value.f2, value.f3);</span><br><span class="line">                            valueState.update(currentValue);</span><br><span class="line">                        &#125;</span><br><span class="line">                        double currentLat = Double.parseDouble(currentValue.f2);</span><br><span class="line">                        double currentLong = Double.parseDouble(currentValue.f3);</span><br><span class="line">                        Timestamp currentTime = currentValue.f0;</span><br><span class="line"></span><br><span class="line">                        double valueLat = Double.parseDouble(value.f2);</span><br><span class="line">                        double valueLong = Double.parseDouble(value.f3);</span><br><span class="line">                        Timestamp valueTime = value.f0;</span><br><span class="line"></span><br><span class="line">                        Double distanceCalculate = MapUtils.distanceCalculate(currentLat, currentLong, valueLat, valueLong);</span><br><span class="line"></span><br><span class="line">                        Long min = DateUtils.dateSubtraction(currentTime.toString(), valueTime.toString());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        System.out.println(distanceCalculate);</span><br><span class="line">                        System.out.println(&quot;状态点： &quot; + currentValue);</span><br><span class="line">                        System.out.println(&quot;当前数据： &quot; + value);</span><br><span class="line"></span><br><span class="line">                        if (distanceCalculate &gt; 500) &#123;</span><br><span class="line">                            currentValue.f0 = value.f0;</span><br><span class="line">                            currentValue.f1 = value.f1;</span><br><span class="line">                            currentValue.f2 = value.f2;</span><br><span class="line">                            currentValue.f3 = value.f3;</span><br><span class="line">                            valueState.update(currentValue);</span><br><span class="line">                            if (min &gt; 30) &#123;</span><br><span class="line">                                return Tuple6.of(&quot;久置点&quot;, currentTime, value.f1, currentLat, currentLong, min);</span><br><span class="line">                            &#125; else &#123;</span><br><span class="line">                                return Tuple6.of(&quot;非久置点&quot;, currentTime, value.f1, currentLat, currentLong, min);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        return Tuple6.of(&quot;邻域点&quot;, currentTime, value.f1, currentLat, currentLong, min);</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    @Override</span><br><span class="line">                    public void open(Configuration parameters) throws Exception &#123;</span><br><span class="line">                        super.open(parameters);</span><br><span class="line"></span><br><span class="line">                        // keyedState可以设置TTL过期时间</span><br><span class="line">//                        StateTtlConfig config= StateTtlConfig</span><br><span class="line">//                                .newBuilder(Time.seconds(30))</span><br><span class="line">//                                .setStateVisibility(StateTtlConfig.StateVisibility.NeverReturnExpired)</span><br><span class="line">//                                .setUpdateType(StateTtlConfig.UpdateType.OnCreateAndWrite)</span><br><span class="line">//                                .build();</span><br><span class="line"></span><br><span class="line">                        ValueStateDescriptor valueStateDescriptor = new ValueStateDescriptor(&quot;agvKeyedState&quot;,</span><br><span class="line">                                TypeInformation.of(new TypeHint&lt;Tuple4&lt;Timestamp, String, String, String&gt;&gt;() &#123;</span><br><span class="line">                                &#125;));</span><br><span class="line"></span><br><span class="line">                        //设置支持TTL配置</span><br><span class="line">//                        valueStateDescriptor.enableTimeToLive(config);</span><br><span class="line"></span><br><span class="line">                        valueState = getRuntimeContext().getState(valueStateDescriptor);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">        SingleOutputStreamOperator&lt;Tuple6&lt;String, Timestamp, String, Double, Double, Long&gt;&gt; filter = map.filter(value -&gt; &#123;</span><br><span class="line">            return value.f0.equals(&quot;久置点&quot;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        filter.addSink(new MysqlSink());</span><br><span class="line"></span><br><span class="line">        env.execute(&quot;read-kafka-test&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
  </entry>
  
</feed>
